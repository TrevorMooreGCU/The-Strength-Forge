@model TheStrengthForge.Models.LoginModel

@{
	ViewBag.Title = "The Strength Forge";
	Layout = "~/Views/Shared/_NewLayout.cshtml";
}

<script language="text/javascript">
	function sha1(msg)
	{
	  function rotl(n,s) { return n<<s|n>
		>>32-s; };
		function tohex(i) { for(var h="", s=28;;s-=4) { h+=(i>>>s&0xf).toString(16); if(!s) return h; } };
		var H0=0x67452301, H1=0xEFCDAB89, H2=0x98BADCFE, H3=0x10325476, H4=0xC3D2E1F0, M=0x0ffffffff;
		var i, t, W=new Array(80), ml=msg.length, wa=new Array();
		msg += String.fromCharCode(0x80);
		while(msg.length%4) msg+=String.fromCharCode(0);
		for(i=0;i<msg.length;i+ =4) wa.push(msg.charCodeAt(i)<<24|msg.charCodeAt(i+1)<<16|msg.charCodeAt(i+2)<<8|msg.charCodeAt(i+3));
	  while(wa.length%16!=14) wa.push(0);
	  wa.push(ml>>>29),wa.push((ml<<3)&M);
	  for( var bo=0;bo<wa.length;bo+=16 ) {
		for(i=0;i<16;i++) W[i]=wa[bo+i];
		for(i=16;i<=79;i++) W[i]=rotl(W[i-3]^W[i-8]^W[i-14]^W[i-16],1);
		var A=H0, B=H1, C=H2, D=H3, E=H4;
		for(i=0 ;i<=19;i++) t=(rotl(A,5)+(B&C|~B&D)+E+W[i]+0x5A827999)&M, E=D, D=C, C=rotl(B,30), B=A, A=t;
		for(i=20;i<=39;i++) t=(rotl(A,5)+(B^C^D)+E+W[i]+0x6ED9EBA1)&M, E=D, D=C, C=rotl(B,30), B=A, A=t;
		for(i=40;i<=59;i++) t=(rotl(A,5)+(B&C|B&D|C&D)+E+W[i]+0x8F1BBCDC)&M, E=D, D=C, C=rotl(B,30), B=A, A=t;
		for(i=60;i<=79;i++) t=(rotl(A,5)+(B^C^D)+E+W[i]+0xCA62C1D6)&M, E=D, D=C, C=rotl(B,30), B=A, A=t;
		H0=H0+A&M;H1=H1+B&M;H2=H2+C&M;H3=H3+D&M;H4=H4+E&M;
	  }
	  return tohex(H0)+tohex(H1)+tohex(H2)+tohex(H3)+tohex(H4);
	}
</script>

<script language="text/javascript">
	function auth(seed)
	{
		var password1 = $('#Password');
		var password = password1.val();
		var hash = sha1(seed + sha1(password).toUpperCase());
		password1.val(hash.toUpperCase());
		return true;
	}
</script>

<script language="text/javascript">
	$(document).ready(function () {
		$('#btnLogin').click(function () {
			if ($('#Password').val() != "") {
				var seed = $('#RandomSalt');
				return auth(seed.val());
			}
			$('#frm').submit();
		});
	});

	$(function () {
		var controls = $(".disable");
		controls.bind("paste", function () {
			return false;
		});
		controls.bind("drop", function () {
			return false;
		});
		controls.bind("cut", function () {
			return false;
		});
		controls.bind("copy", function () {
			return false;
		});
	})
</script>

<!DOCTYPE html>

<html>

<body>
	@using (Html.BeginForm("OnLogin", "Login", FormMethod.Post, new { id = "frm" }))
	{
		@Html.AntiForgeryToken()

		<div class="form-horizontal">

			<br />
			<br />

			<h4>Login</h4>
			<hr />
			@Html.ValidationSummary(true, "", new { @class = "text-danger" })
			<div class="form-group">
				@Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger", @style = "color:red" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.PasswordFor(model => model.Password, new { @class = "form-control" })
					@Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger", @style = "color:red" })
				</div>
			</div>

			<div class="form-group">
				<div class="col-md-offset-2 col-md-10">
					<input type="submit" value="Login" id="btnLogin" class="btn btn-default" />
				</div>
			</div>
		</div>

		@Html.HiddenFor(model => model.RandomSalt)
	}

</body>
</html>
